version: '3.8'

services:
  redis-leader:
    image: redis
    command: redis-server --appendonly yes --notify-keyspace-events KEA
    networks:
      - my-network

  redis-follower-1:
    image: redis
    command: redis-server --slaveof redis-leader 6379
    depends_on:
      - redis-leader
    networks:
      - my-network

  redis-follower-2:
    image: redis
    command: redis-server --slaveof redis-leader 6379
    depends_on:
      - redis-leader
    networks:
      - my-network

  redis-follower-3:
    image: redis
    command: redis-server --slaveof redis-leader 6379
    depends_on:
      - redis-leader
    networks:
      - my-network

  redis-proxy:
    build: ./redis-proxy
    depends_on:
      - redis-leader
      - redis-follower-1
      - redis-follower-2
      - redis-follower-3
    ports:
      - "6478:6379"
    networks:
      - my-network

  fastapi-server-1:
    build: ./like-service
    depends_on:
      - redis-proxy
      - postgres-db
    environment:
      - REDIS_HOST=redis-proxy
      - REDIS_PORT=6379
      - DATABASE_URL=postgresql://likesdb:likesdb@postgres-db/likesdb
    networks:
      - my-network

  fastapi-server-2:
    build: ./like-service
    depends_on:
      - redis-proxy
      - postgres-db
    environment:
      - REDIS_HOST=redis-proxy
      - REDIS_PORT=6379
      - DATABASE_URL=postgresql://likesdb:likesdb@postgres-db/likesdb
    networks:
      - my-network

  fastapi-server-3:
    build: ./like-service
    depends_on:
      - redis-proxy
      - postgres-db
    environment:
      - REDIS_HOST=redis-proxy
      - REDIS_PORT=6379
      - DATABASE_URL=postgresql://likesdb:likesdb@postgres-db/likesdb
    networks:
      - my-network

  db-writer:
    build: ./db-writer
    depends_on:
      postgres-db:
        condition: service_started
      rabbitmq:
        condition: service_started
    environment:
      - DATABASE_URL=postgresql://likesdb:likesdb@postgres-db/likesdb
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
    networks:
      - my-network

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8090:80"
    depends_on:
      - fastapi-server-1
      - fastapi-server-2
      - fastapi-server-3
    networks:
      - my-network

  postgres-db:
    image: postgres:latest
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_DB=likesdb
      - POSTGRES_USER=likesdb
      - POSTGRES_PASSWORD=likesdb
    ports:
      - "5663:5432"
    networks:
      - my-network

  rabbitmq:
      image: rabbitmq:3-management-alpine
      container_name: 'rabbitmq'
      ports:
          - 5672:5672  # AMQP
          - 15672:15672  # Web UI
      volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
      networks:
        - my-network
  redis-event-listener:
    build: ./redis-event-listener
    depends_on:
      postgres-db:
        condition: service_started
      rabbitmq:
        condition: service_started
    environment:
      - REDIS_HOST=redis-leader
      - REDIS_PORT=6379
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
    networks:
      - my-network

networks:
  my-network: